// SPDX-License-Identifier: UNLICENSED
// File: @openzeppelin/contracts/utils/Strings.sol

// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)

pragma solidity ^0.8.11;

import "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol";
import "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol";
import "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol";
import "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol";

// File: nft.sol


pragma solidity ^0.8.11;

contract SemiFungibleToken is  Initializable, ERC1155Upgradeable, UUPSUpgradeable, OwnableUpgradeable {

    // Mendatory function for UUPS:
    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}

    function initialize(string memory uri) public initializer {
        __ERC1155_init(uri);
        __Ownable_init();
    }

    function mint(address _userAddress, uint256 tokenId, uint256 amount) public {
        _mint(_userAddress, tokenId, amount, "0x00");
    }

    function mintBatch(address _userAddress, uint256[] memory tokenId, uint256[] memory amount) public {
        _mintBatch(_userAddress, tokenId, amount, "0x00");
    }
}
